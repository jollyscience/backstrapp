<div class="highlight"><pre><span class="cm">/*</span>
<span class="cm"> RequireJS text 0.27.0 Copyright (c) 2010-2011, The Dojo Foundation All Rights Reserved.</span>
<span class="cm"> Available via the MIT or new BSD license.</span>
<span class="cm"> see: http://github.com/jrburke/requirejs for details</span>
<span class="cm">*/</span>
<span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;Msxml2.XMLHTTP&quot;</span><span class="p">,</span><span class="s2">&quot;Microsoft.XMLHTTP&quot;</span><span class="p">,</span><span class="s2">&quot;Msxml2.XMLHTTP.4.0&quot;</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="sr">/^\s*&lt;\?xml(\s)+version=[\&#39;\&quot;](\d)*.(\d)*[\&#39;\&quot;](\s)*\?&gt;/im</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="sr">/&lt;body[^&gt;]*&gt;\s*([\s\S]+)\s*&lt;\/body&gt;/im</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">location</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">&amp;&amp;</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\:/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">location</span><span class="p">.</span><span class="nx">hostname</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">port</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nb">document</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">createXhr</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span>
<span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)}</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">process</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">process</span><span class="p">.</span><span class="nx">versions</span><span class="o">&amp;&amp;</span><span class="nx">process</span><span class="p">.</span><span class="nx">versions</span><span class="p">.</span><span class="nx">node</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">require</span><span class="p">.</span><span class="nx">nodeRequire</span><span class="p">(</span><span class="s2">&quot;fs&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;utf8&quot;</span><span class="p">))})</span><span class="o">:</span><span class="k">typeof</span> <span class="nb">Packages</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">io</span><span class="p">.</span><span class="nx">File</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">java</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">System</span><span class="p">.</span><span class="nx">getProperty</span><span class="p">(</span><span class="s2">&quot;line.separator&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">io</span><span class="p">.</span><span class="nx">BufferedReader</span><span class="p">(</span><span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">io</span><span class="p">.</span><span class="nx">InputStreamReader</span><span class="p">(</span><span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">io</span><span class="p">.</span><span class="nx">FileInputStream</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="s2">&quot;utf-8&quot;</span><span class="p">)),</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">StringBuffer</span><span class="p">;(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">readLine</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">&amp;&amp;</span>
<span class="nx">f</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">===</span><span class="mi">65279</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">f</span><span class="p">);(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">readLine</span><span class="p">())</span><span class="o">!==</span><span class="kc">null</span><span class="p">;)</span><span class="nx">d</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">toString</span><span class="p">())}</span><span class="k">finally</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">close</span><span class="p">()}</span><span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">)});</span><span class="k">return</span> <span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;0.27.0&quot;</span><span class="p">,</span><span class="nx">strip</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">o</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">jsEscape</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([&#39;\\])/g</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\f]/g</span><span class="p">,</span><span class="s2">&quot;\\f&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\b]/g</span><span class="p">,</span><span class="s2">&quot;\\b&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\n]/g</span><span class="p">,</span><span class="s2">&quot;\\n&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\t]/g</span><span class="p">,</span><span class="s2">&quot;\\t&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\r]/g</span><span class="p">,</span><span class="s2">&quot;\\r&quot;</span><span class="p">)},</span><span class="nx">createXhr</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">XMLHttpRequest</span><span class="o">!==</span>
<span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">break</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;createXhr(): XMLHttpRequest not available&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">parseName</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;!&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;strip&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span><span class="p">{</span><span class="nx">moduleName</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">ext</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">strip</span><span class="o">:</span><span class="nx">b</span><span class="p">}},</span><span class="nx">xdRegExp</span><span class="o">:</span><span class="sr">/^((\w+)\:)?\/\/([^\/\\]+)/</span><span class="p">,</span><span class="nx">useXhr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">xdRegExp</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span>
<span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="o">||</span><span class="nx">f</span><span class="o">===</span><span class="nx">e</span><span class="p">)},</span><span class="nx">finishLoad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">strip</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">isBuild</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">inlineText</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parseName</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">moduleName</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">ext</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toUrl</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">text</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">useXhr</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">useXhr</span><span class="p">;</span><span class="o">!</span><span class="nx">i</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">finishLoad</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">strip</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">)})</span><span class="o">:</span><span class="nx">b</span><span class="p">([</span><span class="nx">f</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">finishLoad</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">moduleName</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">ext</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">strip</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">)})},</span><span class="nx">write</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">jsEscape</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">asModule</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;!&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;define(function () { return &#39;&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&#39;;});\n&quot;</span><span class="p">)}},</span><span class="nx">writeFile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parseName</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">moduleName</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">ext</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toUrl</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">moduleName</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">ext</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.js&quot;</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">asModule</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">asModule</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">g</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">d</span><span class="p">)}}})})();</span>
</pre></div>
