<div class="highlight"><pre><span class="cm">/*</span>
<span class="cm"> * JavaScript Debug - v0.4 - 6/22/2010</span>
<span class="cm"> * http://benalman.com/projects/javascript-debug-console-log/</span>
<span class="cm"> * </span>
<span class="cm"> * Copyright (c) 2010 &quot;Cowboy&quot; Ben Alman</span>
<span class="cm"> * Dual licensed under the MIT and GPL licenses.</span>
<span class="cm"> * http://benalman.com/about/license/</span>
<span class="cm"> * </span>
<span class="cm"> * With lots of help from Paul Irish!</span>
<span class="cm"> * http://paulirish.com/</span>
<span class="cm"> */</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">debug</span><span class="o">=</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">console</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">9</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="s2">&quot;warn&quot;</span><span class="p">,</span><span class="s2">&quot;info&quot;</span><span class="p">,</span><span class="s2">&quot;debug&quot;</span><span class="p">,</span><span class="s2">&quot;log&quot;</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;assert clear count dir dirxml exception group groupCollapsed groupEnd profile profileEnd table time timeEnd trace&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">while</span><span class="p">(</span><span class="o">--</span><span class="nx">j</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}})(</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="p">])}</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="o">--</span><span class="nx">j</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="nx">h</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">o</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">k</span><span class="p">(</span><span class="nx">n</span><span class="p">)){</span><span class="k">return</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">firebug</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">o</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">o</span><span class="p">](</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">q</span><span class="p">)}})(</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">||!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">d</span><span class="p">.</span><span class="nx">log</span><span class="p">)){</span><span class="nx">f</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">)}}</span><span class="nx">h</span><span class="p">.</span><span class="nx">setLevel</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="mi">9</span><span class="p">};</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">m</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">m</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">setCallback</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span><span class="o">:</span><span class="kc">false</span><span class="p">;</span><span class="nx">p</span><span class="o">-=</span><span class="k">typeof</span> <span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="o">++</span><span class="p">])}};</span><span class="k">return</span> <span class="nx">h</span><span class="p">})();</span>
</pre></div>
