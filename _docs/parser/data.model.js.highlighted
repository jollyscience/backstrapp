<div class="highlight"><pre><span class="nx">define</span><span class="p">([</span>
  <span class="s1">&#39;jQuery&#39;</span><span class="p">,</span>
  <span class="s1">&#39;Underscore&#39;</span><span class="p">,</span>
  <span class="s1">&#39;Backbone&#39;</span>
<span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">){</span>
	
	<span class="cm">/*</span>
<span class="cm">		* @class DataModel</span>
<span class="cm">		* @extends Backbone.Model</span>
<span class="cm">	*/</span>
	<span class="kd">var</span> <span class="nx">DataModel</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
		<span class="cm">/*</span>
<span class="cm">			* @property {object} defaults</span>
<span class="cm">		*/</span>
		<span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
			<span class="nx">file</span><span class="o">:</span> <span class="s1">&#39;json/pages.json&#39;</span><span class="p">,</span>
			<span class="nx">pages</span><span class="o">:</span> <span class="p">[]</span>
		<span class="p">},</span>
		
		<span class="cm">/*</span>
<span class="cm">			* @method initialize</span>
<span class="cm">		*/</span>
		<span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;change:newpage&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">addPage</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
		<span class="p">},</span>

		<span class="cm">/*</span>
<span class="cm">			* @method loadData</span>
<span class="cm">			* @param file, callback</span>
<span class="cm">		*/</span>
		<span class="nx">loadData</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">file</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">$</span><span class="p">.</span><span class="nx">getJSON</span><span class="p">(</span><span class="nx">file</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">json</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">callback</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
			<span class="p">});</span>
		<span class="p">},</span>

		<span class="cm">/*</span>
<span class="cm">			* @method itemExists</span>
<span class="cm">			* @param needle, haystack</span>
<span class="cm">		*/</span>
		<span class="nx">itemExists</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">needle</span><span class="p">,</span> <span class="nx">haystack</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">debug</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">&#39;DataModel.itemExists(needle, haystack)&#39;</span><span class="p">,</span> <span class="nx">needle</span><span class="p">,</span> <span class="nx">haystack</span><span class="p">);</span>
			<span class="kd">var</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">ret</span><span class="p">;</span>
			<span class="k">for</span> <span class="p">(</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">haystack</span> <span class="p">)</span> <span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="nx">haystack</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">url</span> <span class="o">==</span> <span class="nx">needle</span><span class="p">)</span> <span class="p">{</span>
					<span class="k">return</span> <span class="nx">haystack</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
		<span class="p">},</span>

		<span class="cm">/*</span>
<span class="cm">			* @method addPage</span>
<span class="cm">		*/</span>
		<span class="nx">addPage</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
			<span class="nx">debug</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">&#39;DataModel.addPage()&#39;</span><span class="p">);</span>
			<span class="nx">debug</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;newpage&#39;</span><span class="p">));</span>
			<span class="kd">var</span> <span class="nx">p</span><span class="p">;</span>
			<span class="nx">p</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;pages&#39;</span><span class="p">);</span>
			<span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;newpage&#39;</span><span class="p">));</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span> <span class="nx">pages</span><span class="o">:</span> <span class="nx">p</span> <span class="p">});</span>
		<span class="p">}</span>
	<span class="p">});</span>

	<span class="k">return</span> <span class="k">new</span> <span class="nx">DataModel</span><span class="p">();</span>

<span class="p">});</span>
</pre></div>
